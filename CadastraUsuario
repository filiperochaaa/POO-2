import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class CadastroUsuario {
    private String nome;
    private String senha;
    private String cpf;

    // Construtor
    public CadastroUsuario(String nome, String senha, String cpf) {
        this.nome = nome;
        this.senha = senha;
        this.cpf = cpf;
    }

    // Método que centraliza todas as validações
    public boolean validar() {
        return validarNome() && validarSenha() && validarCPF();
    }

    // Valida se o nome não é vazio
    public boolean validarNome() {
        boolean valido = nome != null && !nome.trim().isEmpty();
        if (!valido) {
            System.out.println("Erro: Nome não pode estar vazio");
        }
        return valido;
    }

    // Valida se a senha tem mínimo 8 caracteres e contém letra e número
    public boolean validarSenha() {
        if (senha == null || senha.length() < 8) {
            System.out.println("Erro: Senha deve ter no mínimo 8 caracteres");
            return false;
        }
        
        boolean temLetra = false;
        boolean temNumero = false;
        
        for (char c : senha.toCharArray()) {
            if (Character.isLetter(c)) {
                temLetra = true;
            } else if (Character.isDigit(c)) {
                temNumero = true;
            }
        }
        
        boolean valido = temLetra && temNumero;
        if (!valido) {
            System.out.println("Erro: Senha deve conter pelo menos uma letra e um número");
        }
        return valido;
    }

    // Valida se o CPF tem 11 dígitos e contém apenas números
    public boolean validarCPF() {
        if (cpf == null) {
            System.out.println("Erro: CPF não pode ser nulo");
            return false;
        }
        
        // Remove espaços em branco e verifica se tem apenas números
        String cpfLimpo = cpf.trim();
        boolean valido = cpfLimpo.matches("\\d{11}");
        
        if (!valido) {
            System.out.println("Erro: CPF deve conter exatamente 11 dígitos numéricos");
        }
        return valido;
    }

    // Getters para acessar os dados (útil para exibição)
    public String getNome() {
        return nome;
    }

    public String getSenhaMascarada() {
        return senha != null ? "*".repeat(senha.length()) : "null";
    }

    public String getCpf() {
        return cpf;
    }

    // Método para exibir informações do usuário
    public void exibirInformacoes() {
        System.out.println("Nome: " + nome);
        System.out.println("Senha: " + getSenhaMascarada());
        System.out.println("CPF: " + cpf);
        System.out.println("Válido: " + validar());
        System.out.println("---");
    }

    public static void main(String[] args) {
        // Método main vazio para você testar conforme necessário
        System.out.println("Classe CadastroUsuario pronta para uso!");
        System.out.println("Crie objetos e chame o método validar() para testar.");
    }
}
